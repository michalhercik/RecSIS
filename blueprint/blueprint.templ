package blueprint

import (
    "github.com/michalhercik/RecSIS/utils"
    "github.com/michalhercik/RecSIS/database"
    "strconv"
)

// TODO only if there is at least one
// TODO should render in predefined order
templ renderUnassigned(unassigned *[]database.Course) {
    <table>
        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Teacher</th>
                <th>Semester</th>
                <th>Credits</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            for _, course := range *unassigned {
                <tr id={ "id" + strconv.Itoa(course.Id) }>
                    <td> @utils.CourseLink(strconv.Itoa(course.Id), course.Code) </td>
                    <td>{ course.NameEng }</td>
                    <td>{ course.Teacher1 }</td>
                    <td>{ utils.SemesterStr(course.StartingSemester) }</td>
                    <td>{ strconv.Itoa(course.Credits) }</td>
                    <td>
                        <button
                            hx-delete={"/blueprint/remove-unassigned/" + strconv.Itoa(course.Id)}
                            hx-target={"#id" + strconv.Itoa(course.Id)}
                            hx-swap="delete">
                            Remove
                        </button>
                        <button>Assign</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

// TODO by semesters
// TODO add credits by semesters and years
// TODO only if there is at least one
// TODO should render in predefined order
templ renderYears(years *map[int][]database.Course) {
    for i, year := range *years {
        <div id={"BlueprintYear" + strconv.Itoa(i)}>
            <h2>Year { strconv.Itoa(i) }</h2>
            <table>
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Teacher</th>
                    <th>Semester</th>
                    <th>Credits</th>
                    <th>Edit palce</th>
                </tr>
            </thead>
            <tbody>
                for _, course := range year {
                    <tr>
                        <td> @utils.CourseLink(strconv.Itoa(course.Id), course.Code) </td>
                        <td>{ course.NameEng }</td>
                        <td>{ course.Teacher1 }</td>
                        <td>{ utils.SemesterStr(course.StartingSemester) }</td>
                        <td>{ strconv.Itoa(course.Credits) }</td>
                        <td>
                            <button>Edit</button>
                        </td>
                    </tr>
                }
            </tbody>
            </table>
       </div>
    }
    // TODO only if there is at least one
    if len(*years) > 0 {
    <button
        hx-swap="outerHTML"
        hx-post={"/blueprint/remove-year/" + strconv.Itoa(len(*years))}
        hx-target="this">
        Remove last year
    </button>
    }
    <button hx-post="/blueprint/add-year">Add year</button>
}

// TODO only if there is at least one
// TODO should render in predefined order
templ renderCreditTable(years *map[int][]database.Course) {
    <table id="CreditsSum">
        <thead>
            <tr>
                <th>Year</th>
                <th>Semester</th>
                <th>Credits</th>
            </tr>
        </thead>
        <tbody>
            {{ totalSum := 0 }}
            for year, courses := range *years {
                {{
                creditsBySemester := make(map[int]int)
                for _, course := range courses {
                    creditsBySemester[course.StartingSemester] += course.Credits
                    totalSum += course.Credits
                }
                yearStr := strconv.Itoa(year)
                }}
                <tr id={"SumWinterYear" + yearStr}>
                    <td>{ yearStr }</td>
                    <td> Winter </td>
                    <td>{ strconv.Itoa(creditsBySemester[1]) }</td>
                </tr>
                <tr id={"SumSummerYear" + yearStr}>
                    <td>{ yearStr }</td>
                    <td> Summer </td>
                    <td>{ strconv.Itoa(creditsBySemester[2]) }</td>
                </tr>
            }
            <tr>
                <td colspan="2"> Total </td>
                <td>{ strconv.Itoa(totalSum) }</td>
            </tr>
        </tbody>
    </table>
}

templ Content(data *database.BlueprintData) {
    <h1>Unassigned courses</h1>

    @renderUnassigned(&data.Unassigned)

    <h1>Blueprint</h1>

    @renderYears(&data.Years)

    <h1>Credits</h1>

    @renderCreditTable(&data.Years)
}

templ Page(data *database.BlueprintData) {
    @utils.Page("Blueprint") {
        @Content(data)
    }
}