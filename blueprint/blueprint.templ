package blueprint

import (
    "github.com/michalhercik/RecSIS/utils"
    "strconv"
	"fmt"
)

func itos(i int) string {
    return strconv.Itoa(i)
}

// TODO only if there is at least one
templ renderUnassigned(unassigned AcademicYear) {
    // sort courses by name to ensure consistent order
    <h1>Unassigned courses</h1>

    <table>
        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Teacher(s)</th>
                <th>Semester</th>
                <th>Credits</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            for _, course := range unassigned.unassigned {
                <tr id={ "code" + course.code }>
                    <td> @utils.CourseLink(course.code) </td>
                    <td>{ course.nameEn }</td>
                    <td>{ course.teachers.string() }</td>
                    <td>{ course.start.String() }</td>
                    <td>{ itos(course.credits) }</td>
                    <td>
                        <button
                            hx-delete={fmt.Sprintf("/blueprint/%d/%d/%s", unassigned.position, course.semesterPosition, course.code)}
                            hx-target={"#code" + course.code}
                            hx-swap="delete">
                            Remove
                        </button>
                        <button>Assign</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

templ renderCourseTable(courses []Course) {
    <table>
        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Teacher(s)</th>
                <th>Semester</th>
                <th>Credits</th>
                <th>Edit palce</th>
            </tr>
        </thead>
        <tbody>
            for _, course := range courses {
                <tr>
                    <td> @utils.CourseLink(course.code) </td>
                    <td>{ course.nameEn }</td>
                    <td>{ course.teachers.string() }</td>
                    <td>{ course.start.String() }</td>
                    <td>{ itos(course.credits) }</td>
                    <td>
                        <button>Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

templ renderYear(year AcademicYear) {
    <div id={"BlueprintYear" + itos(year.position)}>
        <h2>Year { itos(year.position) }</h2>
        <div>Credits: { itos(year.credits()) }</div>
        <h3>Winter Semester</h3>
        <div>Credits: { itos(year.winterCredits()) }</div>
        @renderCourseTable(year.winter)
        <h3>Summer Semester</h3>
        <div>Credits: { itos(year.summerCredits()) }</div>
        @renderCourseTable(year.summer)
    </div>
}

// TODO only if there is at least one
templ renderYears(years []AcademicYear) {
    <h1>Blueprint</h1>
    {{ 
        totalCredits := 0
        for _, year := range years {
            totalCredits += year.credits()
        }
    }}
    <div>Total credits: { itos(totalCredits) }</div>

    for _, year := range years {
        @renderYear(year)
    }

    if len(years) > 0 {
    <!-- hx-swap="outerHTML" -->
    <button
        hx-delete={"/blueprint/year"}
        hx-target="main">
        Remove last year
    </button>
    }
    <button 
        hx-post={"/blueprint/year"}
        hx-target="main">
        Add year
    </button>
}

templ renderCreditTable(years []AcademicYear) {
    if len(years) > 0 {
    <h1>Credits</h1>

    <table id="CreditsSum">
        <thead>
            <tr>
                <th>Year</th>
                <th>Semester</th>
                <th>Credits</th>
            </tr>
        </thead>
        <tbody>
            {{ totalSum := 0 }}
            for _,year := range years {
                {{
                    totalSum += year.credits()
                    yearStr := itos(year.position)
                }}
                <tr id={"SumWinterYear" + yearStr}>
                    <td>{ yearStr }</td>
                    <td> Winter </td>
                    <td>{ itos(year.winterCredits()) }</td>
                </tr>
                <tr id={"SumSummerYear" + yearStr}>
                    <td>{ yearStr }</td>
                    <td> Summer </td>
                    <td>{ itos(year.summerCredits()) }</td>
                </tr>
            }
            <tr>
                <td colspan="2"> Total </td>
                <td>{ itos(totalSum) }</td>
            </tr>
        </tbody>
    </table>
    }
}

templ Content(data *Blueprint) {
    if len(data.years) >= 2 {
        @renderUnassigned(data.years[0])
        @renderYears(data.years[1:])
        @renderCreditTable(data.years[1:])
    }
}

templ Page(data *Blueprint) {
    @utils.Page("Blueprint") {
        @Content(data)
    }
}

templ InternalServerErrorContent() {
    <h1>Internal Server Error</h1>
    <p>Something went wrong</p>
}

templ InternalServerErrorPage() {
    @utils.Page("Internal Server Error") {
        @InternalServerErrorContent()
    }
}