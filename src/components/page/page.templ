package page

import (
	"github.com/michalhercik/RecSIS/language"
    "fmt"
)

// title string, search, main templ.Component) {
templ PageView(model pageModel) {
    <!DOCTYPE html>
    <html lang={ string(model.lang) }>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{ model.title + " | RecSIS" }</title>
            // icons
            <link rel="icon" type="image/svg+xml" href="/logo.svg"> // modern icon using vector graphics
            <link rel="icon" type="image/png" sizes="256x256" href="/favicon-256x256.png"> // fallback for older browsers
            // css
            <link rel="stylesheet" href="/style.css">
            // bootstrap
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"> // -> icons
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
            // htmx
            <script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
            // alpine js
            <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/sort@3.x.x/dist/cdn.min.js"></script> // drag and drop
            <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/intersect@3.x.x/dist/cdn.min.js"></script> // intersection observer
            <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
            // Google Fonts
            <link href="https://fonts.googleapis.com/css2?family=Saira:wght@400;700&display=swap" rel="stylesheet">
            <script src="/js/utils.js"></script>
        </head>
        <body hx-boost="true" class="position-relative">
            // @watermark()
            @Header(model)
            <main>
                <div id="main-content">
                    @model.main
                </div>
                for _, navItem := range model.navItems {
                    if navItem.Skeleton != nil {
                        @navItem.Skeleton(model.lang)
                    }
                }
            </main>
            @Footer(model)
            // TODO: quick fix for the loader, change it later
            <div id="loader" class="spinner-border text-dark" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div id="page-overlay"></div>
            <div id="explicit-no-loader"></div>
        </body>
    </html>
}

templ Header(model pageModel) {
    <header class="sticky-top">
        <nav class="navbar navbar-expand-lg navbar-light bg-navbar py-2 py-md-0" hx-indicator="#loader"> // TODO: if too narrow, change py-0 to py-_ (e.g. py-1)
            <div class="container position-relative">
                <a class="navbar-brand d-flex align-items-center fs-3 mff-font" href={ templ.URL(model.lang.Path(model.home)) }>
                    <img src="/logo.svg" alt="Logo" height="30" class="mb-1 pe-1">
                    <span class="d-none d-md-inline">RecSIS</span>
                </a>
                <button class="navbar-toggler pb-0 px-1 border-0 align-bottom" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    // x-data is necessary for x-on:click to work
                    <div class="navbar-nav me-auto" x-data={ fmt.Sprintf("{ title: '%s' }", model.title) }>
                        for _, navItem := range model.navItems {
                            @navItemView(navItem, model)
                        }
                    </div>
                    <div class="d-flex justify-content-between flex-row-reverse py-2 py-lg-0">
                        @profileBtn(model)
                        switch model.lang {
                            case language.CS:
                                @langBtn(language.EN)
                            case language.EN:
                                @langBtn(language.CS)
                        }
                    </div>
                </div>
                @searchBar(model)
            </div>
        </nav>
    </header>
}

// url, text string, active bool) {
templ navItemView(nav NavItem, model pageModel) {
    <a
        class="nav-item nav-link nav-item-font pb-0 pb-lg-2"
        :class={ fmt.Sprintf("{ 'active': title == '%s' }", nav.Title.String(model.lang)) }
        href={ templ.URL(model.lang.Path(nav.Path)) }
        @click.prevent={ fmt.Sprintf("if (!event.ctrlKey) { clearExpanded(); title = '%s'; hideMain(); }", nav.Title.String(model.lang)) }
        data-bs-toggle="collapse"
        data-bs-target=".navbar-collapse.show"
        hx-indicator={ nav.Indicator }>
        { nav.Title.String(model.lang) }
    </a>
}

// TODO: put real data here
templ profileBtn(model pageModel) {
    // Mobile version
    <div class="d-lg-none">
        <div class="d-flex justify-content-end">
            <button class="btn btn-outline-secondary bi bi-person-circle border-0" type="button" data-bs-toggle="collapse" data-bs-target="#userCollapse" aria-expanded="false"></button>
        </div>
        <div class="collapse" id="userCollapse">
            <ul class="list-unstyled ps-3">
                <li><span class="dropdown-item disabled text-center text-decoration-line-through">Jan Novák</span></li>
                <hr>
                <li><button class="dropdown-item text-decoration-line-through" href="#">Reload from SIS</button></li>
                <li>
                    <form hx-boost="false" method="POST" action={ templ.URL(model.lang.Path("/logout")) }>
                        <button type="submit" class="dropdown-item"><i class="bi bi-box-arrow-right"></i> Log out</button>
                    </form>
                </li>
            </ul>
        </div>
    </div>

    // Desktop version
    <li class="dropdown d-none d-lg-block">
        <button class="btn btn-outline-secondary bi bi-person-circle border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
        <ul class="dropdown-menu dropdown-menu-end">
            <li><span class="dropdown-item disabled text-center text-decoration-line-through">Jan Novák</span></li>
            <li><hr class="dropdown-divider"></li>
            <li><button class="dropdown-item text-decoration-line-through" href="#">Reload from SIS</button></li>
            <li>
                <form hx-boost="false" method="POST" action={ templ.URL(model.lang.Path("/logout")) }>
                    <button type="submit" class="dropdown-item"><i class="bi bi-box-arrow-right"></i> Log out</button>
                </form>
            </li>
        </ul>
    </li>
}

templ searchBar(model pageModel) {
    <div
        x-cloak
        id="search-bar-container"
        class="position-absolute d-flex">
        @model.search
    </div>
}

templ langBtn(l language.Language) {
    <button
        class="btn btn-outline-secondary align-self-start border-0"
        x-data @click={ "changeLanguage('" + string(l) + "')" }>
        { string(l) }
    </button>
}

templ Footer(model pageModel) {
    <footer class="text-center text-body-secondary pb-3 position-absolute bottom-0 w-100">
        <hr/>
        { model.text.Contact }
        <a href="mailto:TODO@TODO.com">TODO@TODO.com</a>
    </footer>
}