package page

import (
	"github.com/michalhercik/RecSIS/language"
)

type Text struct {}
var t Text = Text{}

// title string, search, main templ.Component) {
templ PageView(model pageModel) {
    <!DOCTYPE html>
    <html lang={ string(model.lang) }>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{ model.title }</title>
            // icons
            <link rel="icon" type="image/svg+xml" href="/logo.svg"> // modern icon using vector graphics
            <link rel="icon" type="image/png" sizes="256x256" href="/favicon-256x256.png"> // fallback for older browsers
            // css
            <link rel="stylesheet" href="/style.css">
            // bootstrap
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"> // -> icons
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
            // htmx
            <script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
            // alpine js
            <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/sort@3.x.x/dist/cdn.min.js"></script> // drag and drop
            <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
            // Google Fonts
            <link href="https://fonts.googleapis.com/css2?family=Saira:wght@400;700&display=swap" rel="stylesheet">
            <script>
            // Clear expanded- from session storage
            function clearExpanded() {
                Object.keys(sessionStorage).forEach(key => {
                    if (key.startsWith('expanded-')) {
                        sessionStorage.removeItem(key);
                    }
                });
            }
            // Change language to selected
            function changeLanguage(lang) {
                let currentUrl = window.location.pathname;
                let queryParams = window.location.search;
                let newUrl = currentUrl.replace(/^\/(cs|en)/, '') || '';
                newUrl = '/' + lang + newUrl + queryParams;
                window.location.href = newUrl;
            }
            </script>
        </head>
        <body hx-boost="true">
            // @watermark()
            @Header(model)
            <main>
                @model.main
            </main>
            <hr/>
            @Footer(model)
            // TODO: quick fix for the loader, change it later
            <div id="loader" class="spinner-border text-dark" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div id="page-overlay"></div>
            <div id="explicit-no-loader"></div>
        </body>
    </html>
}

templ Header(model pageModel) {
    <header class="sticky-md-top">
        <nav class="navbar navbar-expand-md navbar-light bg-light py-0"> // TODO: if too narrow, change py-0 to py-_ (e.g. py-1)
            <div class="container-fluid">
                <div style="width: 100px;">
                    <a class="d-flex align-items-center navbar-brand fs-3" href={ templ.URL(model.lang.Path(model.home)) } style="font-family: 'Saira', sans-serif;">
                        <img src="/logo.svg" alt="Logo" style="height: 30px;" class="mb-1 pe-1">
                        RecSIS
                    </a>
                </div>
                <button class="navbar-toggler fs-6" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    // x-data is necessary for x-on:click to work
                    <ul class="navbar-nav mx-auto" x-data>
                        for _, navItem := range model.navItems {
                            @navItemView(navItem, model)
                        }
                    </ul>
                    <div class="d-flex justify-content-start justify-content-md-center" style="width: 450px;" x-data>
                        @model.search
                    </div>
                    // x-data is necessary for x-on:click to work
                    <div class="d-flex justify-content-start justify-content-md-end" style="width: 100px;" x-data>
                        switch model.lang {
                            case language.CS:
                                @langButton(language.EN)
                            case language.EN:
                                @langButton(language.CS)
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
}

templ Footer(model pageModel) {
    <footer class="text-center my-3">
        // { t.Contact }
        <a href="mailto:TODO@TODO.com">TODO@TODO.com</a>
    </footer>
}

// url, text string, active bool) {
templ navItemView(nav NavItem, model pageModel) {
    {{
        class := "fs-4 nav-link"
        if nav.Title.String(model.lang) == model.title {
            class += " active"
        }
    }}
    <li class="nav-item"><a @click="clearExpanded()" class={ class } href={ templ.URL(model.lang.Path(nav.Path)) }>{ nav.Title.String(model.lang) }</a></li>
}

templ langButton(l language.Language) {
    <button
        class="fw-semibold btn btn-outline-none ps-0"
        @click={ "changeLanguage('" + string(l) + "')" }>
        { string(l) }
    </button>
}