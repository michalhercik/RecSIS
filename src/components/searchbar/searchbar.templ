package searchbar

import (
    "fmt"
)

templ SearchBar(model searchBarModel) {
    <form
        id="search-form"
        class="w-100"
        hx-get={ model.lang.Path(model.searchEndpoint) }
        hx-target="body"
        hx-push-url="true"
        if model.includeFilters {
            hx-include={ model.filtersSelector }
        }
        @submit="$refs.searchInput.blur()"
        x-data="{ searchInput: '', quickResOpen: false }"
        x-init={ fmt.Sprintf("searchInput = '%s'", model.searchInput) }
    >
        <div class="justify-content-center">
            <div class="dropdown" @click.outside="quickResOpen = false">
                <div class="input-group">
                    <input type="text" name={ model.searchParam } id="search" class="form-control responsive-font" placeholder={ model.t.SearchPlaceholder } autocomplete="off"
                        x-model="searchInput"
                        x-ref="searchInput"
                        @keyup.slash.outside="$el.focus(); $el.selectionStart = $el.selectionEnd = $el.value.length;"
                        @keyup.escape="$el.blur(); quickResOpen = false"
                        @focus="quickResOpen = true"
                        hx-get={ model.lang.Path(model.quickSearchEndpoint) }
                        hx-trigger="input changed delay:200ms, focus once"
                        hx-target="#quick-search-results"
                        hx-swap="outerHTML"
                        hx-push-url="false"
                        hx-indicator="#explicit-no-loader"
                    />
                    // TODO: this might reload results as empty search query
                    <button x-cloak x-show="searchInput.length > 0" type="reset" class="btn bg-white border-top border-bottom border-start-0" @click="searchInput = ''; quickResOpen = false; $refs.searchInput.focus();">
                        <i class="bi bi-x-lg"></i>
                    </button>
                    <button type="submit" class="btn btn-submit-input-green responsive-font" @click="quickResOpen = false">
                        <span class="d-none d-sm-inline">{ model.t.SearchButton }</span>
                        <i class="bi bi-search d-inline d-sm-none"></i>
                    </button>
                </div>
                @quickResults()
            </div>
        </div>
    </form>
}

templ QuickResults(model quickResultsModel) {
    @quickResults() {
        <div
            x-cloak
            x-show="quickResOpen && searchInput.length > 0"
            class="dropdown-menu w-100 shadow-sm show"
        >
            if len(model.courses) == 0 {
                <div class="dropdown-item text-muted">{ model.t.NoCoursesFound }</div>
            } else {
                for _, course := range model.courses {
                    <a
                        href={ templ.URL(model.lang.Path(model.resultDetailEndpoint(course.code))) }
                        class="dropdown-item text-truncate responsive-font"
                        hx-boost="false"
                        tabindex="0"
                        @click="quickResOpen = false"
                    >
                        { course.code + " - " + course.name }
                    </a>
                }
            }
        </div>
    }
}

templ quickResults() {
    <div id="quick-search-results">
        { children... }
    </div>
}