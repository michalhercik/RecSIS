package bpbtn

import (
    "fmt"
)

templ AddBtn(code string, numberOfYears int, t Text, options Options) {
    <div id={ fmt.Sprintf("%s-blueprint-add", code) } class="btn-group">
        <button type="button" class="btn btn-outline-blueprint"
            hx-post={ t.Utils.Language.Path(options.HxPostBase + "/blueprint/" + code) }
            hx-vals={ `"year": 0, "semester": 0` }
            hx-swap={ options.HxSwap }
            hx-target={ options.HxTarget }
        >
            { t.Assign }
        </button>
        if (numberOfYears > 0) {
            <button
                type="button"
                class="btn btn-outline-blueprint dropdown-toggle dropdown-toggle-split"
                data-bs-toggle="dropdown"
                aria-expanded="false"
                data-bs-offset="0, 0">
            </button>
            <ul class="dropdown-menu dropdown-menu-end">
                for year := 1; year <= numberOfYears; year++ {
                    @assignSemesterButton(code, t.WinterAssign, year, 1, t, options)
                    @assignSemesterButton(code, t.SummerAssign, year, 2, t, options)
                }
            </ul>
        }
    </div>
}

templ PlusSignBtn(code string, numberOfYears int, t Text, options Options) {
    <div
        class="btn-group w-100"
        x-cloak
        x-show="hoverRow"
        x-data="{ hover: false, hoverSelection: false }"
        @mouseover="hover = true"
        @mouseleave="hover = false">
        <button
            class="btn btn-sm btn-outline-blueprint dp-bp-assign-btn-sm bi bi-plus lh-1 p-0"
            if numberOfYears > 0 {
                :class="{ 'border-transparent': !hover, 'dp-bp-delimiter': !hover }"
            } else {
                :class="{ 'border-transparent': !hover }"
            }
            hx-post={ t.Utils.Language.Path(options.HxPostBase + "/blueprint/" + code) }
            hx-vals={ `"year": 0, "semester": 0` }
            hx-swap={ options.HxSwap }
            hx-target={ options.HxTarget }
            >
        </button>
        if (numberOfYears > 0) {
            <button
                class="btn btn-sm btn-outline-blueprint dropdown-toggle dropdown-toggle-split"
                :class="{ 'btn-blueprint-hover': hoverSelection, 'border-transparent': !hover }"
                data-bs-toggle="dropdown"
                aria-expanded="false"
                data-bs-offset="0, 0">
            </button>
            <ul
                class="dropdown-menu dropdown-menu-end"
                @mouseover="hoverSelection = true"
                @mouseleave="hoverSelection = false">
                for year := 1; year <= numberOfYears; year++ {
                    @assignSemesterButton(code, t.WinterAssign, year, 1, t, options)
                    @assignSemesterButton(code, t.SummerAssign, year, 2, t, options)
                }
            </ul>
        }
    </div>
}

templ assignSemesterButton(code, semesterText string, year, semester int, t Text, options Options) {
    <li class="mx-3">
        <button
            class="dropdown-item rounded text-center dropdown-item-blueprint"
            hx-post={ t.Utils.Language.Path(options.HxPostBase + "/blueprint/" + code) }
            hx-vals={ fmt.Sprintf(`"year": %d, "semester": %d`, year, semester) }
            hx-swap={ options.HxSwap }
            hx-target={ options.HxTarget }>
            { fmt.Sprintf("%s %s", t.YearStr(year), semesterText) }
        </button>
    </li>
}